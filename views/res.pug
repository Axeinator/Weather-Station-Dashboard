html 
  head

  title= 'Weather Station'
  link(rel='stylesheet' href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" 
  crossorigin="anonymous")
  link(rel='stylesheet'
  href='https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.3.1/css/ion.rangeSlider.min.css')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.3.1/js/ion.rangeSlider.min.js')
  script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.bundle.min.js" integrity="sha512-SuxO9djzjML6b9w9/I07IWnLnQhgyYVSpHZx0JV97kGBfTIsUYlWflyuW4ypnvhBrslz1yJ3R+S14fdCWmSmSA==" crossorigin="anonymous")
  link(rel='stylesheet' href='main.css')

  body(onload='temperatureGraph(); console.log(chart)')

  canvas(class='graph' id='temperatureChart' width='50%' height='50vh')
    
  script.
    var temps = !{JSON.stringify(temps)}
    let xArray = []
    temps.forEach(obs => xArray.push(new Date(obs.time)))
    let yArray = []
    temps.forEach(obs => yArray.push(obs.temperature))
    function temperatureGraph() {
      var ctx = document.getElementById('temperatureChart')
      var data = {
        labels: xArray,
        datasets: [
          {
            label: 'Temperature',
            pointBackgroundColor: "#ff2200",
            backgroundColor: "rgba(255, 198, 133, 0.6)",
            borderColor: "#ff6200",
            pointStrokeColor: "#fff",
            pointHighlightFill: "#fff",
            pointHighlightStroke: "rgba(220,220,220,1)",
            data: yArray
          }
        ]
      }
      chart = new Chart(ctx, {
        type: 'line',
        data: data,
        options: {
          scales: {
            yAxes: [{
              ticks: {
                min: 0,
                max: 100,
                stepSize: 10
              }
            }],
            xAxes: [{
              type: 'time',
              time: {
                unit: 'minute',
              },
              ticks: {
                min: Date.now() - (86400 * 1000),
                max: Date.now(),
                maxTicksLimit: xArray.length / 15

              }
            }]
          },
          maintainAspectRatio: false,
          responsive: true
        }
      });
    }


input(type="text" class="js-range-slider" id="timeRange" name="timeRange")

script.
    var slider = document.getElementById('timeRange')
    $(".js-range-slider").ionRangeSlider({
      skin: 'big',
      type: 'double',
      min: 1,
      max: 24,
      from: 1,
      to: 24,
      min_interval: 1,
      onChange: function (data) {
          chart.options.scales.xAxes[0].ticks.min = Date.now() - ((24-data.from)*60*60)*1000
          chart.options.scales.xAxes[0].ticks.max = Date.now() - ((24-data.to)*60*60)*1000
          chart.update()

      }
    })

